@page "/fetchdata"
@inject HttpClient Http

@using Microsoft.Extensions.Logging;
@inject ILoggerFactory LoggerFactory

<h1>Drink Search</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (searchedDrinks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>strDrink</th>
                <th>strInstructions</th>
            </tr>
        </thead>
        <tbody>
            @*@foreach (var drink in searchedDrinks)
            {
                <tr>
                    <td>@drink.StrDrink</td>
                    <td>@drink.StrInstructions</td>
                </tr>
            }*@
        </tbody>
    </table>
}

@code {

    private BlazorWasm.Root searchedDrinks;

    public object testvariable;

    protected override async Task OnInitializedAsync()
    {
        var logger = LoggerFactory.CreateLogger<FetchData>();

        logger.LogDebug("Getting api");

        swaggerClient client = new("https://www.thecocktaildb.com/api/json/v1/1/", Http);

        logger.LogDebug("Getting search: ", typeof(BlazorWasm.Root));

        //searchedDrinks = await client.GetDrinkAsync("margarita");

        logger.LogCritical("Testing Error Logging");

        //BlazorWasm.Middleware.DrinkapiMiddleware inputvar = null;

        BlazorWasm.Controllers.DrinksAPIController testObject = new();

        //testvariable = testObject.Testtask();

        logger.LogDebug("Testing String: ", testvariable);
    }


}