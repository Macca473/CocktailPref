@page "/fetchdata"
@inject HttpClient Http

@using Microsoft.Extensions.Logging;
@inject ILoggerFactory LoggerFactory

<h1>Drink Search</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Tobj == null)
{
    <p><em>Loading...</em></p>
}
else

{
    @*<h3>@Tobj.Teststr</h3>*@
    <!--<table class="table">
        <thead>
            <tr>
                <th>strDrink</th>
                <th>strInstructions</th>
            </tr>
        </thead>
        <tbody>-->
    @*@foreach (var drink in searchedDrinks)
        {
            <tr>
                <td>@drink.StrDrink</td>
                <td>@drink.StrInstructions</td>
            </tr>
        }*@

    <!--</tbody>
    </table>-->
}

@code {

    //private BlazorWasm.Root searchedDrinks;

    private object Tobj;

    //Models.TestModel object Tobj = new();

    //public string testvariable;

    protected override async Task OnInitializedAsync()
    {
        var logger = LoggerFactory.CreateLogger<FetchData>();

        logger.LogDebug("On Initialized Async");

        Controllers.DrinksAPIController client = new();

        Tobj = await client.Testtask();

        logger.LogDebug("Getting Object: ", Tobj);
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    var logger = LoggerFactory.CreateLogger<FetchData>();

    //    logger.LogDebug("Getting api");

    //    swaggerClient client = new("https://www.thecocktaildb.com/api/json/v1/1/", Http);

    //    logger.LogDebug("Getting search: ", typeof(BlazorWasm.Root));

    //    //searchedDrinks = await client.GetDrinkAsync("margarita");

    //    logger.LogCritical("Testing Error Logging");

    //    //BlazorWasm.Middleware.DrinkapiMiddleware inputvar = null;

    //    testvariable = "Teststring";

    //    Tobj.Teststr = testvariable;

    //    logger.LogDebug("Testing String: ", testvariable);
    //}


}